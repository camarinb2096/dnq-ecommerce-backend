// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"cmarin20/dnq-ecommerce/internal/app/auth"
	"cmarin20/dnq-ecommerce/internal/app/products"
	"cmarin20/dnq-ecommerce/internal/app/user"
	"cmarin20/dnq-ecommerce/internal/config/db"
	"cmarin20/dnq-ecommerce/internal/config/server"
	"cmarin20/dnq-ecommerce/pkg/logger"
)

// Injectors from wire.go:

func Initialize() (*App, error) {
	dbConfig := db.NewDbConfig()
	loggerLogger := logger.NewLogger()
	gormDB := db.NewDbConn(dbConfig, loggerLogger)
	repository := user.NewRepository(gormDB, loggerLogger)
	services := user.NewService(repository, loggerLogger)
	endpoints := user.NewEndpoints(services)
	productsRepository := products.NewRepository(gormDB, loggerLogger)
	productsServices := products.NewService(productsRepository, loggerLogger)
	productsEndpoints := products.NewEndpoints(productsServices)
	authServices := auth.NewService(repository, loggerLogger)
	authEndpoints := auth.NewEndpoints(authServices)
	serverServer := server.NewServer(endpoints, productsEndpoints, authEndpoints, loggerLogger)
	app := &App{
		Server: serverServer,
	}
	return app, nil
}

// wire.go:

type App struct {
	Server *server.Server
}
